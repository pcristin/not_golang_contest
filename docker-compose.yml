services:
  postgres:
    image: postgres:15-alpine
    container_name: flash_sale_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-flash_sale}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - flash_sale_network

  redis:
    image: redis:7-alpine
    container_name: flash_sale_redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - flash_sale_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PORT: ${PORT:-8080}
    container_name: flash_sale_app
    environment:
      PORT: ${PORT:-8080}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      REDIS_URL: ${REDIS_URL:-redis:6379}
      POSTGRES_URL: ${POSTGRES_URL:-postgres://postgres:postgres@postgres:5432/flash_sale?sslmode=disable}
    ports:
      - "${PORT:-8080}:${PORT:-8080}"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - flash_sale_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  flash_sale_network:
    driver: bridge 